{"ast":null,"code":"var _jsxFileName = \"/Users/nivesh/Desktop/Bajaj/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jsonInput, setJsonInput] = useState(\"\");\n  const [apiResponse, setApiResponse] = useState(null);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Set the document title to your roll number\n  useEffect(() => {\n    document.title = \"21BCE3058\";\n  }, []);\n  const handleSubmit = async () => {\n    try {\n      const parsedJson = JSON.parse(jsonInput); // Parse the JSON input\n\n      const response = await fetch(\"http://127.0.0.1:5000/bfhl\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(parsedJson) // Send the parsed JSON as a string\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json(); // Parse the response JSON\n      setApiResponse(data); // Set the API response in state\n      setError(null); // Clear any previous errors\n    } catch (e) {\n      setError(\"Invalid JSON or failed to fetch data\"); // Set error message if JSON is invalid or fetch fails\n      setApiResponse(null); // Clear the API response if there's an error\n    }\n  };\n  const renderData = () => {\n    if (!apiResponse) return {}; // Return empty object if no API response\n\n    let filteredData = {}; // Object to store filtered data\n\n    if (selectedOptions.includes(\"alphabets\")) {\n      filteredData.alphabets = apiResponse.alphabets; // Add alphabets to filtered data\n    }\n    if (selectedOptions.includes(\"numbers\")) {\n      filteredData.numbers = apiResponse.numbers; // Add numbers to filtered data\n    }\n    if (selectedOptions.includes(\"highest_lowercase_alphabet\")) {\n      filteredData.highest_lowercase_alphabet = apiResponse.highest_lowercase_alphabet; // Add highest lowercase alphabet to filtered data\n    }\n    return filteredData; // Return the filtered data\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: jsonInput,\n        onChange: e => setJsonInput(e.target.value),\n        placeholder: \"Enter JSON here: { \\\"data\\\": [\\\"M\\\",\\\"1\\\",\\\"334\\\",\\\"4\\\",\\\"B\\\",\\\"Z\\\",\\\"a\\\"] }\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), apiResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        isMulti: true,\n        options: [{\n          value: \"alphabets\",\n          label: \"Alphabets\"\n        }, {\n          value: \"numbers\",\n          label: \"Numbers\"\n        }, {\n          value: \"highest_lowercase_alphabet\",\n          label: \"Highest Lowercase Alphabet\"\n        }],\n        onChange: selected => setSelectedOptions(selected.map(option => option.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filtered Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(renderData(), null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dDroD1qUVBiTVKtM2bB0VDxngFE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Select","jsxDEV","_jsxDEV","App","_s","jsonInput","setJsonInput","apiResponse","setApiResponse","selectedOptions","setSelectedOptions","error","setError","document","title","handleSubmit","parsedJson","JSON","parse","response","fetch","method","headers","body","stringify","ok","Error","status","data","json","e","renderData","filteredData","includes","alphabets","numbers","highest_lowercase_alphabet","className","children","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","isMulti","options","label","selected","map","option","_c","$RefreshReg$"],"sources":["/Users/nivesh/Desktop/Bajaj/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport \"./App.css\";\n\nfunction App() {\n  const [jsonInput, setJsonInput] = useState(\"\");\n  const [apiResponse, setApiResponse] = useState(null);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Set the document title to your roll number\n  useEffect(() => {\n    document.title = \"21BCE3058\";\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      const parsedJson = JSON.parse(jsonInput); // Parse the JSON input\n\n      const response = await fetch(\"http://127.0.0.1:5000/bfhl\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(parsedJson), // Send the parsed JSON as a string\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const data = await response.json(); // Parse the response JSON\n      setApiResponse(data); // Set the API response in state\n      setError(null); // Clear any previous errors\n    } catch (e) {\n      setError(\"Invalid JSON or failed to fetch data\"); // Set error message if JSON is invalid or fetch fails\n      setApiResponse(null); // Clear the API response if there's an error\n    }\n  };\n\n  const renderData = () => {\n    if (!apiResponse) return {}; // Return empty object if no API response\n\n    let filteredData = {}; // Object to store filtered data\n\n    if (selectedOptions.includes(\"alphabets\")) {\n      filteredData.alphabets = apiResponse.alphabets; // Add alphabets to filtered data\n    }\n    if (selectedOptions.includes(\"numbers\")) {\n      filteredData.numbers = apiResponse.numbers; // Add numbers to filtered data\n    }\n    if (selectedOptions.includes(\"highest_lowercase_alphabet\")) {\n      filteredData.highest_lowercase_alphabet =\n        apiResponse.highest_lowercase_alphabet; // Add highest lowercase alphabet to filtered data\n    }\n\n    return filteredData; // Return the filtered data\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"input-container\">\n        <textarea\n          value={jsonInput}\n          onChange={(e) => setJsonInput(e.target.value)}\n          placeholder='Enter JSON here: { \"data\": [\"M\",\"1\",\"334\",\"4\",\"B\",\"Z\",\"a\"] }'\n        />\n        <button onClick={handleSubmit}>Submit</button>\n        {error && <p style={{ color: \"red\" }}>{error}</p>}\n      </div>\n      {apiResponse && (\n        <div className=\"result-container\">\n          <Select\n            isMulti\n            options={[\n              { value: \"alphabets\", label: \"Alphabets\" },\n              { value: \"numbers\", label: \"Numbers\" },\n              {\n                value: \"highest_lowercase_alphabet\",\n                label: \"Highest Lowercase Alphabet\",\n              },\n            ]}\n            onChange={(selected) =>\n              setSelectedOptions(selected.map((option) => option.value))\n            }\n          />\n          <h3>Filtered Response:</h3>\n          <pre>{JSON.stringify(renderData(), null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}